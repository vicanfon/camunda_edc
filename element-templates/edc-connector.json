{
  "$schema": "https://unpkg.com/@camunda/zeebe-element-templates-json-schema/resources/schema.json",
  "name": "EDC Connector",
  "id": "io.camunda.connectors.EdcConnector.v1",
  "description": "Connect to Eclipse Dataspace Components (EDC) to query catalogs and retrieve data from assets",
  "version": 1,
  "documentationRef": "https://github.com/eclipse-edc/Connector",
  "icon": {
    "contents": "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'%3E%3Cpath fill='%23505050' d='M9 0C4.03 0 0 4.03 0 9s4.03 9 9 9 9-4.03 9-9-4.03-9-9-9zm0 16c-3.86 0-7-3.14-7-7s3.14-7 7-7 7 3.14 7 7-3.14 7-7 7z'/%3E%3Cpath fill='%23505050' d='M9 4c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0 8c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3z'/%3E%3C/svg%3E"
  },
  "category": {
    "id": "connectors",
    "name": "Connectors"
  },
  "appliesTo": [
    "bpmn:Task"
  ],
  "elementType": {
    "value": "bpmn:ServiceTask"
  },
  "groups": [
    {
      "id": "authentication",
      "label": "Authentication"
    },
    {
      "id": "configuration",
      "label": "Configuration"
    },
    {
      "id": "asset",
      "label": "Asset Selection"
    },
    {
      "id": "output",
      "label": "Output Mapping"
    },
    {
      "id": "errors",
      "label": "Error Handling"
    }
  ],
  "properties": [
    {
      "type": "Hidden",
      "value": "io.camunda:edc-connector:1",
      "binding": {
        "type": "zeebe:taskDefinition:type"
      }
    },
    {
      "label": "EDC Management URL",
      "description": "Your consumer EDC connector's management API URL (v3). Must include /management path. Examples: http://localhost:8081/management (MVD) or http://localhost:9193/management",
      "group": "configuration",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "edcManagementUrl"
      },
      "constraints": {
        "notEmpty": true,
        "pattern": {
          "value": "^https?://.*",
          "message": "Must be a valid HTTP(S) URL"
        }
      }
    },
    {
      "label": "Provider Connector URL",
      "description": "Base URL of provider's EDC connector (WITHOUT /api/dsp - this is added automatically). Examples: http://localhost:8092 (MVD), http://provider:8080, or http://host.docker.internal:8092",
      "group": "configuration",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "providerUrl"
      },
      "constraints": {
        "notEmpty": true,
        "pattern": {
          "value": "^https?://.*",
          "message": "Must be a valid HTTP(S) URL"
        }
      }
    },
    {
      "label": "Asset ID",
      "description": "The ID of the asset you want to retrieve from the EDC catalog",
      "group": "asset",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "assetId"
      },
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "id": "authenticationType",
      "label": "Authentication Type",
      "description": "Choose the authentication method for EDC Management API",
      "group": "authentication",
      "type": "Dropdown",
      "value": "api-key",
      "choices": [
        {
          "name": "API Key",
          "value": "api-key"
        },
        {
          "name": "Basic Auth",
          "value": "basic"
        },
        {
          "name": "None",
          "value": "none"
        }
      ],
      "binding": {
        "type": "zeebe:input",
        "name": "authentication.type"
      }
    },
    {
      "id": "apiKey",
      "label": "API Key",
      "description": "API key for authentication with EDC Management API",
      "group": "authentication",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "authentication.apiKey"
      },
      "condition": {
        "property": "authenticationType",
        "equals": "api-key"
      }
    },
    {
      "id": "username",
      "label": "Username",
      "description": "Username for basic authentication",
      "group": "authentication",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "authentication.username"
      },
      "condition": {
        "property": "authenticationType",
        "equals": "basic"
      }
    },
    {
      "id": "password",
      "label": "Password",
      "description": "Password for basic authentication",
      "group": "authentication",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "authentication.password"
      },
      "condition": {
        "property": "authenticationType",
        "equals": "basic"
      }
    },
    {
      "label": "Timeout (seconds)",
      "description": "Maximum time to wait for contract negotiation and transfer completion",
      "group": "configuration",
      "type": "String",
      "value": "60",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "timeout"
      },
      "optional": true
    },
    {
      "label": "Result Variable",
      "description": "Name of the variable to store the connector result (contains assetId, contractAgreementId, transferId, and data)",
      "group": "output",
      "type": "String",
      "binding": {
        "type": "zeebe:taskHeader",
        "key": "resultVariable"
      }
    },
    {
      "label": "Result Expression",
      "description": "Expression to map the connector result to process variables",
      "group": "output",
      "type": "Text",
      "feel": "required",
      "binding": {
        "type": "zeebe:taskHeader",
        "key": "resultExpression"
      },
      "optional": true
    },
    {
      "label": "Error Expression",
      "description": "Expression to define BPMN errors to throw",
      "group": "errors",
      "type": "Text",
      "feel": "required",
      "binding": {
        "type": "zeebe:taskHeader",
        "key": "errorExpression"
      },
      "optional": true
    }
  ]
}
